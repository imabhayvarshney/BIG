ARG REPO_LOCATION
FROM adoptopenjdk/openjdk11:slim

RUN apt update
RUN apt -y install python3.8 python3.8-distutils build-essential python3.8-dev
RUN ln -s /usr/bin/pip3 /usr/bin/pip && ln -s /usr/bin/python3.8 /usr/bin/python
RUN apt install wget
# download and run the pip3 bootstrap script
RUN cd /tmp && wget https://bootstrap.pypa.io/get-pip.py && python3.8 /tmp/get-pip.py

RUN mkdir ~/ner_env && mkdir ~/ner_env/ootb_additional_ner_models && mkdir ~/ner_env/ner_models  \
    && mkdir ~/ner_env/ner_models/custom_ner_models
COPY ./sdk-requirements.txt /root/ner/ner_package/sdk-requirements.txt
RUN pip install -r /root/ner/ner_package/sdk-requirements.txt

RUN apt-get -y remove python3-dev build-essential
RUN apt -y autoremove

RUN python -m spacy download en_core_web_sm
RUN cp -r /usr/local/lib/python3.8/dist-packages/en_core_web_sm/en_core_web_sm-*/ ~/ner_env/bigid_ner_model
RUN cp -r /usr/local/lib/python3.8/dist-packages/en_core_web_sm/en_core_web_sm-*/ ~/ner_env/ner_models/custom_ner_models/test_model



ARG MAVEN_VERSION=3.6.3
ARG USER_HOME_DIR="/root"
ARG SHA=c35a1803a6e70a126e80b2b3ae33eed961f83ed74d18fcd16909b2d44d7dada3203f1ffe726c17ef8dcca2dcaa9fca676987befeadc9b9f759967a8cb77181c0
ARG BASE_URL=https://apache.osuosl.org/maven/maven-3/${MAVEN_VERSION}/binaries
ENV CLASSIFICATIONS_SDK_PYTHON="/usr/local/lib/python3.8/dist-packages"
ENV DYLD_LIBRARY_PATH=$CLASSIFICATIONS_SDK_PYTHON/jep
ENV NER_SDK_UNITTESTS_ENABLED=true
# Maven fails with 'Can't read cryptographic policy directory: unlimited'
# because it looks for $JAVA_HOME/conf/security/policy/unlimited but it is in
# /etc/java-9-openjdk/security/policy/unlimited
# RUN ln -s /etc/java-11-openjdk /usr/lib/jvm/java-11-openjdk-$(dpkg --print-architecture)/conf

RUN mkdir -p /usr/share/maven /usr/share/maven/ref \
  && curl -fsSL -o /tmp/apache-maven.tar.gz ${BASE_URL}/apache-maven-${MAVEN_VERSION}-bin.tar.gz \
  && echo "${SHA}  /tmp/apache-maven.tar.gz" | sha512sum -c - \
  && tar -xzf /tmp/apache-maven.tar.gz -C /usr/share/maven --strip-components=1 \
  && rm -f /tmp/apache-maven.tar.gz \
  && ln -s /usr/share/maven/bin/mvn /usr/bin/mvn

ENV MAVEN_HOME /usr/share/maven
ENV MAVEN_CONFIG "$USER_HOME_DIR/.m2"

COPY mvn-entrypoint.sh /usr/local/bin/mvn-entrypoint.sh
COPY settings-docker.xml /usr/share/maven/ref/
RUN chmod +x /usr/local/bin/mvn-entrypoint.sh
ENTRYPOINT ["/usr/local/bin/mvn-entrypoint.sh"]
CMD ["mvn"]
