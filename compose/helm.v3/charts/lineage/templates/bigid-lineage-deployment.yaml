{{- if .Values.global.bigid.lineage.create -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: bigid-lineage
  namespace: {{ .Release.Namespace | quote }}
  labels:
    app: bigid-lineage
    {{- with .Values.global.additionalLabels }}
      {{- toYaml . | nindent 4 }}
    {{- end }}
  annotations:
    {{ include "global.skipCheckovAnnotations" . | nindent 4 }}
    {{- with .Values.global.commonAnnotations }}
      {{- toYaml . | nindent 4 }}
    {{- end }}
spec:
  replicas: {{ .Values.global.bigid.lineage.replicaCount }}
  selector:
    matchLabels:
      app: bigid-lineage
      {{- with .Values.global.podLabels }}
        {{- toYaml . | nindent 6 }}
      {{- end }}
  {{- if .Values.global.bigid.lineage.updateStrategy }}
  strategy: {{- toYaml .Values.global.bigid.lineage.updateStrategy | nindent 4 }}
  {{- end }}
  template:
    metadata:
      {{- with .Values.global.podAnnotations }}
      annotations: {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        app: bigid-lineage
        {{- with .Values.global.podLabels }}
          {{- toYaml . | nindent 8 }}
        {{- end }}
      {{- if and (.Values.global.apm.enabled) (eq .Values.global.apm.type "datadog") }}
        tags.datadoghq.com/bigid-lineage.env: {{ .Release.Namespace }}
        tags.datadoghq.com/bigid-lineage.service: bigid-lineage
        tags.datadoghq.com/service: "bigid-lineage"
        tags.datadoghq.com/version: "{{ .Values.global.image.tag | trunc 63 }}"
      {{- end }}
    spec:
      serviceAccount: bigid-lineage
      automountServiceAccountToken: false
      initContainers:
      {{- if .Values.global.bigid.tenantService.create }}
      - name: init-tenant-service
        image: {{ template "initContainer.image" . }}
        imagePullPolicy: {{ .Values.global.image.pullPolicy }}
        command: [ 'sh', '-c', "until wget -q --spider http://bigid-tenant-service:{{ .Values.global.bigid.tenantService.port }}/api/v1/tenant-service/health; do echo waiting for bigid-tenant-service; sleep 3; done" ]
        resources:
          {{- toYaml .Values.global.initContainers.resources | nindent 10 }}
        {{- if .Values.global.initContainers.containerSecurityContext.enabled }}
        securityContext: {{- omit .Values.global.initContainers.containerSecurityContext "enabled" | toYaml | nindent 10 }}
        {{- end }}
      {{- end }}
      containers:
      - name: bigid-lineage
        image: "{{ .Values.global.image.repository }}/{{.Values.global.bigid.lineage.image.repository }}{{ template "bigid.armRepository" . }}:{{ .Values.global.image.tag }}"
        {{- if .Values.global.bigid.containerSecurityContext.enabled }}
        securityContext: {{- omit .Values.global.bigid.containerSecurityContext "enabled" | toYaml | nindent 10 }}
        {{- end }}
        imagePullPolicy: {{ .Values.global.image.pullPolicy }}
        {{- if .Values.global.bigid.lineage.livenessProbe.enabled }}
        livenessProbe:
          httpGet:
            path: {{ .Values.global.bigid.lineage.livenessProbe.path }}
            port: {{ .Values.global.bigid.lineage.livenessProbe.port }}
          initialDelaySeconds: {{ .Values.global.bigid.lineage.livenessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.global.bigid.lineage.livenessProbe.periodSeconds }}
          timeoutSeconds: {{ .Values.global.bigid.lineage.livenessProbe.timeoutSeconds }}
          failureThreshold: {{ .Values.global.bigid.lineage.livenessProbe.failureThreshold }}
          successThreshold: {{ .Values.global.bigid.lineage.livenessProbe.successThreshold }}
        {{- end }}
        {{- if .Values.global.bigid.lineage.readinessProbe.enabled }}
        readinessProbe:
          httpGet:
            path: {{ .Values.global.bigid.lineage.readinessProbe.path }}
            port: {{ .Values.global.bigid.lineage.readinessProbe.port }}
          initialDelaySeconds: {{ .Values.global.bigid.lineage.readinessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.global.bigid.lineage.readinessProbe.periodSeconds }}
          timeoutSeconds: {{ .Values.global.bigid.lineage.readinessProbe.timeoutSeconds }}
          failureThreshold: {{ .Values.global.bigid.lineage.readinessProbe.failureThreshold }}
          successThreshold: {{ .Values.global.bigid.lineage.readinessProbe.successThreshold }}
        {{- end }}
        ports:
          - containerPort: {{ .Values.global.bigid.lineage.port }}
        envFrom:
        - secretRef:
            name: mongodb-base-configuration
        - configMapRef:
            name: mongodb-java-configuration
        - configMapRef:
            name: global-configuration
        - configMapRef:
            name: apm-configuration
        {{- if .Values.global.extraEnvVarsCM }}
        - configMapRef:
            name: {{ .Values.global.extraEnvVarsCM }}
        {{- end }}
        {{- if .Values.global.extraEnvVarsSecret }}
        - secretRef:
            name: {{ .Values.global.extraEnvVarsSecret }}
        {{- end }}
        env:
        {{- with .Values.global.extraEnvVars }}
          {{- toYaml . | nindent 8 }}
        {{- end }}
        {{- if and (.Values.global.apm.enabled) (eq .Values.global.apm.type "datadog") }}
        - name: DD_AGENT_HOST
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.hostIP
        - name: DD_ENV
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.labels['tags.datadoghq.com/bigid-lineage.env']
        - name: DD_SERVICE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.labels['tags.datadoghq.com/bigid-lineage.service']
        {{- end }}
        - name: IS_FIPS_MODE
          value: {{ .Values.global.fips.enabled | quote }}
        - name: BIGID_ORCH_PROTOCOL
          value: "http"
        - name: BIGID_ORCH_HOST
          value: "bigid-orch"
        - name: BIGID_ORCH_PORT
          value: "{{ .Values.global.bigid.orchestrator.port }}"
        - name: BIGID_WEB_PROTOCOL
          value: "http"
        - name: BIGID_ORCH2_HOST
          value: "bigid-orch2"
        - name: BIGID_ORCH2_PORT
          value: "{{ .Values.global.bigid.orchestrator2.port }}"
        - name: BIGID_WEB_HOST
          value: "bigid-web"
        - name: BIGID_WEB_PORT
          value: "{{ .Values.global.bigid.web.port }}"
        - name: JDK_JAVA_OPTIONS
          value: {{ printf "$(JAVA_APM_OPTS) %s" (include "java.calcHeapSize" .Values.global.bigid.lineage) | quote }}
        - name: DISABLE_SERVICES_LOGS
          value: {{ .Values.global.bigid.shouldDisableLogs | quote }}
        - name: SCALABLE_HEALTH_CHECK_ENABLED
          value: "{{ .Values.global.bigid.scalableHealthCheck.enabled }}"
        resources:
          {{- toYaml .Values.global.bigid.lineage.resources | nindent 10 }}
        volumeMounts:
          - name: mongo-ssl-lineage-truststore-secrets
            mountPath: /etc/ssl/bigid
            readOnly: true
          {{- if .Values.global.fips.enabled }}
          - name: mq-tls
            mountPath: /tmp/rabbitcerts
          {{- end }}
          {{- with .Values.global.extraVolumeMounts }}
            {{- toYaml . | nindent 10 }}
          {{- end }}
      volumes:
        {{- if .Values.global.fips.enabled }}
        - name: mq-tls
          secret:
            secretName: bigid-mq-secrets
            items:
              - key: client.cert
                path: client.cert
        {{- end }}
        - name: mongo-ssl-lineage-truststore-secrets
          secret:
            secretName: mongo-ssl-truststore-secrets
        {{- with .Values.global.extraVolumes }}
          {{- toYaml . | nindent 8 }}
        {{- end }}
      imagePullSecrets:
      {{- range .Values.global.imagePullSecrets }}
        - name: {{ . }}
      {{- end }}
      {{- if .Values.global.bigid.podSecurityContext.enabled }}
      securityContext: {{- omit .Values.global.bigid.podSecurityContext "enabled" | toYaml | nindent 8 }}
      {{- end }}
      restartPolicy: Always
      {{- with .Values.global.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.global.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.global.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}
