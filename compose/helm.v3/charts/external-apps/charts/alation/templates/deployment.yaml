{{- if .Values.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "alation.fullname" . }}
  namespace: {{ $.Release.Namespace | quote }}
  labels:
    {{- include "alation.labels" . | nindent 4 }}
  {{- with .Values.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  annotations:
    {{ include "global.skipCheckovAnnotations" . | nindent 4 }}
    {{- with .Values.global.commonAnnotations }}
      {{- toYaml . | nindent 4 }}
    {{- end }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "alation.selectorLabels" . | nindent 6 }}
  {{- if .Values.updateStrategy }}
  strategy: {{- toYaml .Values.updateStrategy | nindent 4 }}
  {{- end }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "alation.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "alation.serviceAccountName" . }}
      automountServiceAccountToken: false
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      initContainers:
        {{- if .Values.rbac.enabled }}
           {{- include "external-apps.initContainer.waitForJwtJob" . | nindent 8 }}
        {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.registry }}/{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          {{- if .Values.livenessProbe.enabled }}
          livenessProbe:
            httpGet:
              path: {{ .Values.livenessProbe.path }}
              port: {{ .Values.service.port }}
              scheme: HTTP
            initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.livenessProbe.timeoutSeconds }}
            failureThreshold: {{ .Values.livenessProbe.failureThreshold }}
            successThreshold: {{ .Values.livenessProbe.successThreshold }}
          {{- end }}
          {{- if .Values.readinessProbe.enabled }}
          readinessProbe:
            httpGet:
              path: {{ .Values.readinessProbe.path }}
              port: {{ .Values.service.port }}
              scheme: HTTP
            initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.readinessProbe.timeoutSeconds }}
            failureThreshold: {{ .Values.readinessProbe.failureThreshold }}
            successThreshold: {{ .Values.readinessProbe.successThreshold }}
          {{- end }}
          {{- if .Values.global.mongodb.mongoSSL }}
          volumeMounts:
            - name: mongo-ssl-secrets
              mountPath: /etc/ssl/bigid
              readOnly: true
          {{- end }}
          envFrom:
            - secretRef:
                name: "bigid-secrets"
          env:
          - name: BIGID_URL
            value: "http://bigid-ui:80"
          - name: BIGID_MONGO_USER
            value: "$(atlas-db-user)"
          - name: BIGID_MONGO_PWD
            value: "$(atlas-db-pass)"
          - name: MONGO_EXTERNAL_FULL_URL
          {{- if .Values.mongodb.mongoFullUrl }}
            value: {{ .Values.mongodb.mongoFullUrl | quote }}
          {{- else }}
            value: 'mongodb://$(BIGID_MONGO_USER):$(BIGID_MONGO_PWD)@$(BIGID_MONGO_HOST_EXT):$(BIGID_MONGO_PORT)/{{ .Values.mongodb.mongoUri }}&ssl=$(BIGID_MONGO_SSL)&tlsAllowInvalidHostnames=$(BIGID_MONGO_SSL_DISABLE_HOSTNAME_VERIFICATION)'
          {{- end }}
          - name: BIGID_REFRESH_TOKEN
            valueFrom:
              secretKeyRef:
                name: bigid-jwt-token
                key: token
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- if .Values.global.mongodb.mongoSSL }}
      volumes:
        - name: mongo-ssl-secrets
          secret:
            secretName: mongo-ssl-secrets
            defaultMode: 420
      {{- end }}
      {{- with .Values.global.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.global.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.global.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}
