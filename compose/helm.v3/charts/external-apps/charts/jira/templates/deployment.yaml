{{- if .Values.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "jira.fullname" . }}
  namespace: {{ $.Release.Namespace | quote }}
  labels:
    {{- include "jira.labels" . | nindent 4 }}
  annotations:
    {{ include "global.skipCheckovAnnotations" . | nindent 4 }}
    {{- with .Values.global.commonAnnotations }}
      {{- toYaml . | nindent 4 }}
    {{- end }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "jira.selectorLabels" . | nindent 6 }}
  {{- if .Values.updateStrategy }}
  strategy: {{- toYaml .Values.updateStrategy | nindent 4 }}
  {{- end }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "jira.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "jira.serviceAccountName" . }}
      automountServiceAccountToken: false
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          args:
          - /opt/jira/bigid-jira.sh
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.registry }}/{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"

          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          {{- if .Values.livenessProbe.enabled }}
          livenessProbe:
            httpGet:
              path: {{ .Values.livenessProbe.path }}
              port: {{ .Values.service.port }}
            initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.livenessProbe.timeoutSeconds }}
            failureThreshold: {{ .Values.livenessProbe.failureThreshold }}
            successThreshold: {{ .Values.livenessProbe.successThreshold }}
          {{- end }}
          {{- if .Values.readinessProbe.enabled }}
          readinessProbe:
            httpGet:
              path: {{ .Values.readinessProbe.path }}
              port: {{ .Values.service.port }}
            initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.readinessProbe.timeoutSeconds }}
            failureThreshold: {{ .Values.readinessProbe.failureThreshold }}
            successThreshold: {{ .Values.readinessProbe.successThreshold }}
          {{- end }}
          {{- if .Values.global.mongodb.mongoSSL }}
          volumeMounts:
            - name: bigid-mongodb-ca
              mountPath: /etc/ssl/bigid
              readOnly: true
          {{- end }}
          envFrom:
            - secretRef:
                name: mongodb-base-configuration
            - configMapRef:
                name: mongodb-node-configuration
          env:
          - name: USE_REFRESH_TOKEN
            value: "{{ .Values.bigid.USE_REFRESH_TOKEN }}"
          {{- if .Values.global.bigid.generateToken.enabled | default false }}
          - name: BIGID_REFRESH_TOKEN
            valueFrom:
              secretKeyRef:
                name: bigid-jwt-token
                key: token
                optional: true
          {{- else }}
          - name: BIGID_REFRESH_TOKEN
            value: "{{ .Values.bigid.BIGID_REFRESH_TOKEN }}"
          {{- end }}
          - name: JIRA_BASE_URL
            value: {{ .Values.jiraUrl | quote }}
          - name: JIRA_USER_NAME
            value: {{ .Values.jiraUser | quote }}
          - name: JIRA_AUTH_TOKEN
            value: {{ .Values.jiraToken | quote }}
          - name: BIGID_URL
            value: "http://bigid-ui:80"

          - name: BIGID_MONGO_USER
            value: "$(BIGID_MONGO_USER)"
          - name: BIGID_MONGO_PWD
            value: "$(BIGID_MONGO_PWD)"
          - name: MONGO_EXTERNAL_FULL_URL
            value: "mongodb://$(BIGID_MONGO_USER):$(BIGID_MONGO_PWD)@$(BIGID_MONGO_HOST_EXT):$(BIGID_MONGO_PORT)/{{ .Values.mongodb.mongoUri }}&ssl=$(BIGID_MONGO_SSL)&tlsAllowInvalidHostnames=$(BIGID_MONGO_SSL_DISABLE_HOSTNAME_VERIFICATION)"

          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- if .Values.global.mongodb.mongoSSL }}
      volumes:
      - name: bigid-mongodb-ca
        secret:
          secretName: bigid-mongodb-ca
          defaultMode: 420
      - name: mongo-kerberos-config-service-secrets
        secret:
          secretName: mongo-kerberos-secrets
          defaultMode: 420
      {{- end }}
      {{- with .Values.global.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}
