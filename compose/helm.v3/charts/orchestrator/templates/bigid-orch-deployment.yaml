apiVersion: apps/v1
kind: Deployment
metadata:
  name: bigid-orch
  namespace: {{ .Release.Namespace | quote }}
  labels:
    app: bigid-orch
    {{- with .Values.global.additionalLabels }}
      {{- toYaml . | nindent 4 }}
    {{- end }}
    {{- include "orchestrator.labels" . | nindent 4 }}
  annotations:
    {{ include "global.skipCheckovAnnotations" . | nindent 4 }}
    {{- with .Values.global.commonAnnotations }}
      {{- toYaml . | nindent 4 }}
    {{- end }}
spec:
  replicas: {{ .Values.global.bigid.orchestrator.replicaCount }}
  selector:
    matchLabels:
      app: bigid-orch
      {{- with .Values.global.podLabels }}
        {{- toYaml . | nindent 6 }}
      {{- end }}
  {{- if .Values.global.bigid.orchestrator.updateStrategy }}
  strategy: {{- toYaml .Values.global.bigid.orchestrator.updateStrategy | nindent 4 }}
  {{- end }}
  template:
    metadata:
      annotations:
      {{- with .Values.global.podAnnotations }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.global.bigid.orchestrator.podAnnotations }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        app: bigid-orch
        {{- with .Values.global.podLabels }}
          {{- toYaml . | nindent 8 }}
        {{- end }}
      {{- if and (.Values.global.apm.enabled) (eq .Values.global.apm.type "datadog") }}
        tags.datadoghq.com/bigid-orch.env: {{ .Release.Namespace }}
        tags.datadoghq.com/bigid-orch.service: bigid-orch
        tags.datadoghq.com/service: "bigid-orch"
        tags.datadoghq.com/version: "{{ .Values.global.image.tag | trunc 63 }}"
      {{- end }}
    spec:
      serviceAccount: bigid-orch
      automountServiceAccountToken: false
      initContainers:
      - name: init-config-service
        image: {{ template "initContainer.image" . }}
        imagePullPolicy: {{ .Values.global.image.pullPolicy }}
        command: ['sh', '-c', "until wget -q --spider http://bigid-config-service:{{ .Values.global.bigid.configService.port }}/actuator/health; do echo waiting for bigid-config-service; sleep 3; done"]
        resources:
          {{- toYaml .Values.global.initContainers.resources | nindent 10 }}
        {{- if .Values.global.initContainers.containerSecurityContext.enabled }}
        securityContext: {{- omit .Values.global.initContainers.containerSecurityContext "enabled" | toYaml | nindent 10 }}
        {{- end }}
      - name: init-redis
        image: {{ template "initContainer.image" . }}
        imagePullPolicy: {{ .Values.global.image.pullPolicy }}
        command: ['sh', '-c', "until nc -zv -w1 $(BIGID_REDIS_HOST) $(BIGID_REDIS_PORT); do echo waiting for bigid-cache; sleep 3; done"]
        envFrom:
        - configMapRef:
            name: global-configuration
        resources:
          {{- toYaml .Values.global.initContainers.resources | nindent 10 }}
        {{- if .Values.global.initContainers.containerSecurityContext.enabled }}
        securityContext: {{- omit .Values.global.initContainers.containerSecurityContext "enabled" | toYaml | nindent 10 }}
        {{- end }}
      {{- if .Values.global.bigid.tenantService.create }}
      - name: init-tenant-service
        image: {{ template "initContainer.image" . }}
        imagePullPolicy: {{ .Values.global.image.pullPolicy }}
        command: [ 'sh', '-c', "until wget -q --spider http://bigid-tenant-service:{{ .Values.global.bigid.tenantService.port }}/api/v1/tenant-service/health; do echo waiting for bigid-tenant-service; sleep 3; done" ]
        resources:
          {{- toYaml .Values.global.initContainers.resources | nindent 10 }}
        {{- if .Values.global.initContainers.containerSecurityContext.enabled }}
        securityContext: {{- omit .Values.global.initContainers.containerSecurityContext "enabled" | toYaml | nindent 10 }}
        {{- end }}
      {{- end }}
      containers:
      - name: bigid-orch
        image: "{{ .Values.global.image.repository }}/{{.Values.global.bigid.orchestrator.image.repository }}{{ template "bigid.armRepository" . }}:{{ .Values.global.image.tag }}"
        {{- if .Values.global.bigid.containerSecurityContext.enabled }}
        securityContext: {{- omit .Values.global.bigid.containerSecurityContext "enabled" | toYaml | nindent 10 }}
        {{- end }}
        imagePullPolicy: {{ .Values.global.image.pullPolicy }}
        readinessProbe:
          httpGet:
            path: /health/readiness
            port: {{ .Values.global.bigid.orchestrator.port }}
          initialDelaySeconds: {{ .Values.global.bigid.orchestrator.readinessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.global.bigid.orchestrator.readinessProbe.periodSeconds }}
          timeoutSeconds: {{ .Values.global.bigid.orchestrator.readinessProbe.timeoutSeconds }}
          successThreshold: {{ .Values.global.bigid.orchestrator.readinessProbe.successThreshold }}
          failureThreshold: {{ .Values.global.bigid.orchestrator.readinessProbe.failureThreshold }}
        livenessProbe:
          httpGet:
            path: /health
            port: {{ .Values.global.bigid.orchestrator.port }}
          initialDelaySeconds: {{ .Values.global.bigid.orchestrator.livenessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.global.bigid.orchestrator.livenessProbe.periodSeconds }}
          timeoutSeconds: {{ .Values.global.bigid.orchestrator.livenessProbe.timeoutSeconds }}
          successThreshold: {{ .Values.global.bigid.orchestrator.livenessProbe.successThreshold }}
          failureThreshold: {{ .Values.global.bigid.orchestrator.livenessProbe.failureThreshold }}
        resources:
          {{- toYaml .Values.global.bigid.orchestrator.resources | nindent 10 }}
        volumeMounts:
        - name: logs
          mountPath: /usr/src/app/log
        - name: bigid-mongodb-ca
          mountPath: /etc/ssl/bigid
          readOnly: true
        - name: mongo-kerberos-orch-secrets
          mountPath: /etc/kerberos
          readOnly: true
        {{- with .Values.global.extraVolumeMounts }}
          {{- toYaml . | nindent 8 }}
        {{- end }}
        ports:
        - containerPort: {{ .Values.global.bigid.orchestrator.port }}
        envFrom:
        - secretRef:
            name: mongodb-base-configuration
        - configMapRef:
            name: mongodb-node-configuration
        - configMapRef:
            name: global-configuration
        - configMapRef:
            name: apm-configuration
        {{- if .Values.global.extraEnvVarsCM }}
        - configMapRef:
            name: {{ .Values.global.extraEnvVarsCM }}
        {{- end }}
        {{- if .Values.global.extraEnvVarsSecret }}
        - secretRef:
            name: {{ .Values.global.extraEnvVarsSecret }}
        {{- end }}
        env:
        {{- with .Values.global.extraEnvVars }}
          {{- toYaml . | nindent 8 }}
        {{- end }}
        {{- with .Values.global.bigid.orchestrator.extraEnvVars }}
          {{- toYaml . | nindent 8 }}
        {{- end }}
        {{- if and (.Values.global.apm.enabled) (eq .Values.global.apm.type "datadog") }}
        - name: DD_AGENT_HOST
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.hostIP
        - name: DD_ENV
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.labels['tags.datadoghq.com/bigid-orch.env']
        - name: DD_SERVICE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.labels['tags.datadoghq.com/bigid-orch.service']
        {{- end }}
        - name: SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: {{ template "bigid.secretKey" . }}
              key: secretKey
        - name: SECRET_SALT
          valueFrom:
            secretKeyRef:
              name: secret-key
              key: secretSalt
        - name: APPLICATION_CREDENTIALS_KEY
          valueFrom:
            secretKeyRef:
              name: secret-key
              key: appsCredsKey
        - name: AUTH_SECRET_KEY
          value: {{ .Values.global.authKey | quote }}
        - name: BIGID_MQ_USER
          valueFrom:
            secretKeyRef:
              name: bigid-auth-secret
              key: rabbitmq-user
        - name: BIGID_MQ_PWD
          valueFrom:
            secretKeyRef:
              name: bigid-auth-secret
              key: rabbitmq-pass
        - name: SCAN_PARTS_STARTUP_EXECUTOR_ENABLED
          value: {{ .Values.global.bigid.orchestrator.scanPartsStartupExecutorEnabled | quote }}
        - name: USE_SAAS
          value: {{ .Values.global.bigid.useSaas.enabled | quote }}
        - name: COMPANY_NAME
          value: {{ .Values.global.bigid.companyName | quote }}
        - name: BIGID_MQ_PROTOCOL
          value: "amqps://"
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: bigid-auth-secret
              key: redis-pass
        - name: CORRELATION_RECOVERY_SCHEDULER_FLAG
          value: {{ .Values.global.bigid.orchestrator.correlationRecoverySchedulerFlag | quote }}
        - name: NODE_OPTIONS
          value: {{ printf "$(NODE_APM_OPTS) %s" (include "nodeJs.maxOldSpaceSize" .Values.global.bigid.orchestrator) | quote }}
        - name: NER_CLASSIFIER_ENABLED_FEATURE_FLAG
          value: {{ .Values.global.bigid.ner.create | quote }}
        - name: ENABLE_LINEAGE
          value: {{ .Values.global.bigid.lineage.create | quote }}
        - name: ENABLE_REPORTING_ETL
          value: {{ .Values.global.bigid.reportingEtl.create | quote }}
        - name: ENABLE_OBJECT_PROFILING_BI_EVENT
          value: {{ .Values.global.bigid.orchestrator.objectProfilingBiEvents | quote }}
        - name: ENABLE_TENANT_SERVICE
          value: {{ .Values.global.bigid.tenantService.create | quote }}
        - name: VENDORS_DIRECTORY_ENABLED_FF
          value: {{ .Values.global.bigid.vendorsDirectoryEnabledFF | quote }}
        - name: MULTI_TENANT_MODE_ENABLED
          value: {{ .Values.global.bigid.multiTenantMode.enabled | quote }}
        - name: MULTI_TENANT_CONFIG_ENABLED
          value: {{ .Values.global.bigid.configService.multiTenantConfigEnabled | quote }}
        - name: SENDGRID_API_KEY
          valueFrom:
            secretKeyRef:
              name: secret-key
              key: sendgrid-api-key
        - name: SHOULD_GENERATE_AND_STORE_MONGO_CREDS_FF
          value: {{ .Values.global.bigid.multiTenantMode.generateAndUseMongoCreds | quote }}
        - name: CLUSTERING_ENABLED
          value: {{ .Values.global.bigid.clustering.create | quote }}
        - name: ACI_ENABLED
          value: {{ .Values.global.bigid.aci.create | quote }}
        - name: DL_STREAM_NAME
          value: {{ .Values.global.bigid.dataLakeClient.dlStreamName | quote }}
        - name: ENABLE_DATALAKE_CLIENT
          value: {{ .Values.global.bigid.dataLakeClient.enabled | quote }}
        - name: SAAS_ENV
          value: {{ .Values.global.bigid.saasEnv | quote }}
        - name: LABELER_ENABLED
          value: {{ .Values.global.bigid.labeler.create | quote }}
        - name: BIGID_SCANNER_USER
          value: {{ .Values.global.bigid.scanner.scannerUser | quote }}
        - name: JSON_LOGS_CREATION
          value: {{ .Values.global.bigid.logConfiguration.jsonLogs.enabled | quote }}
        - name: AMOUNT_OF_LOGS_FILE
          value: {{ .Values.global.bigid.logConfiguration.amountOfLogsFile | quote }}
        - name: DISABLE_SERVICES_LOGS
          value: {{ .Values.global.bigid.shouldDisableLogs | quote }}
        - name: SCALABLE_HEALTH_CHECK_ENABLED
          value: {{ .Values.global.bigid.scalableHealthCheck.enabled | quote }}
        - name: CONCURRENT_CORRELATION
          value: "true"
        - name: HOTSPOTS_ENABLED
          value: {{ .Values.global.bigid.clustering.hotspots.create | quote }}
        - name: PAYLOAD_ENCRYPTION_KEY
          valueFrom:
            secretKeyRef:
              name: payload-enc-key
              key: payloadEncKey
        - name: SHOULD_AUTO_REGISTER_APPLICATIONS
          value: {{ .Values.global.bigid.orchestrator.shouldAutoRegisterApps | quote }}
        - name: METADATA_UPDATE_BY_BULK_ENABLED
          value: {{ .Values.global.bigid.orchestrator.metadataUpdateBulkEnabled | quote }}
        - name: METADATA_UPDATE_BY_BULK_SIZE
          value: {{ .Values.global.bigid.orchestrator.metadataUpdateBulkSize | quote }}
        - name: STRUCTURED_CLASSIFICATION_SAMPLING_ENABLED
          value: {{ .Values.global.bigid.orchestrator.structuredClassificationSamplingEnabled | quote }}
        - name : USE_BACKPRESSURE_BULK_UPDATES
          value: {{ .Values.global.bigid.orchestrator.metadataUpdateBackpressure | quote }}
        - name: SYSTEM_BACKPRESSURE_QUEUES_CONFIGURATION
          value: {{ .Values.global.bigid.backpressure.queuesConfiguration | quote }}
        - name: SYSTEM_BACKPRESSURE_IS_ENABLED
          value: {{ .Values.global.bigid.backpressure.enabled | quote }}
        - name: SYSTEM_BACKPRESSURE_IS_DRY_RUN_ENABLED
          value: {{ .Values.global.bigid.backpressure.dryRunEnabled | quote }}
        - name: SYSTEM_BACKPRESSURE_REPORT_QUEUES_METRICS_CRON_EXP
          value: {{ .Values.global.bigid.backpressure.reportQueuesMetricsCronExp | quote }}
        - name: SYSTEM_BACKPRESSURE_EXCESSIVE_LOAD_DETECTION_WINDOW_IN_MIN
          value: {{ .Values.global.bigid.backpressure.excessiveLoadDetectionWindowInMin | quote }}
        - name: SYSTEM_BACKPRESSURE_SYSTEM_OVERLOAD_DETECTION_CRON_EXP
          value: {{ .Values.global.bigid.backpressure.systemOverloadDetectionCronExp | quote }}
        - name: SYSTEM_BACKPRESSURE_ALLOWED_CONCURRENT_SCANNER_JOBS
          value: {{ .Values.global.bigid.backpressure.allowedConcurrentScannerJobs | quote }}
        - name: SYSTEM_BACKPRESSURE_RECOVERY_THRESHOLD_PERCENTAGE
          value: {{ .Values.global.bigid.backpressure.recoveryThresholdPercentage | quote }}

        - name: IS_FIPS_MODE
          value: {{ .Values.global.fips.enabled | quote }}
        - name: SYSTEM_BACKPRESSURE_STATUS_TTL_SEC
          value: {{ .Values.global.bigid.backpressure.statusTtlSec | quote }}
        - name: FEEDBACK_LOOP_FF
          value: {{ .Values.global.bigid.feedbackLoop.enabled | quote }}
        - name: STATE_MANAGEMENT_API_ENABLED
          value: {{ default "false" .Values.global.bigid.processManager.create | quote }}
        {{- if .Values.global.bigid.correlator.ignite.enabled }}
        - name: IGNITE_CLUSTER_URL
          value: "http://{{ .Values.global.bigid.correlator.ignite.clusterName }}.{{ .Values.global.bigid.correlator.ignite.namespace }}.svc.cluster.local:8080"
        {{- end }}
        - name: CLASSIFIER_TESTER_ENABLED
          value: {{ .Values.global.bigid.classifierTester.enabled | quote }}
        - name: BIGCHAT_FF_ENABLED
          value: {{ .Values.global.bigid.bigchatFFEnabled | quote }}
        {{- if .Values.global.bigid.metadataSearch.create }}
        - name: METADATA_SEARCH_ENABLED
          value: "true"
        {{- end }}
        - name: AUTO_RETRY_SCAN_PARTS_FF
          value: {{ .Values.global.bigid.orchestrator.autoRetryScanPartsFF | quote }}
        - name: CLASSIFICATION_NEW_FLOW_ENABLED
          value: {{ .Values.global.bigid.orchestrator.classificationNewFlow | quote }}
        - name: SCAN_JOBS_IN_MEMORY_ENABLED
          value: {{ .Values.global.bigid.scanJobsInMemoryEnabled | quote}}
        - name: BIGID_SCAN_SCHEDULER_ENABLED
          value: {{ .Values.global.bigid.orchestrator.bigIDScanSchedulerEnabled | quote }}
        - name: USE_DISPLAY_NAME_FOR_POLICY_FF
          value: {{ .Values.global.bigid.useDisplayNameForPolicyFF | quote }}
        - name: ENABLE_UNIFIED_VAULTS
          value: {{ .Values.global.bigid.enableUnifiedVaults | quote }}
        - name: ENVIRONMENT_FF
          value: {{ .Values.global.bigid.orchestrator.environmentFF | quote }}
        - name: DYNAMIC_MODIFY_PARSING_THREADS_FF
          value: {{ .Values.global.bigid.orchestrator.dynamicModifyParsingThreadsFF | quote }}
        - name: CONNECTIVITY_EXPERIENCE_ENABLED
          value: {{ .Values.global.bigid.connectivityExperienceEnabled | quote }}
        - name: DS_ONBOARDING_LAYOUT_ENABLED
          value: {{ .Values.global.bigid.dsOnboardingLayoutEnabled | quote }}
        - name: DS_COLLABORATION_ENABLED
          value: {{ .Values.global.bigid.dsCollaborationEnabled | quote }}
        - name: SUGGESTED_ACTIONS_ENABLED
          value: {{ .Values.global.bigid.suggestedActionsEnabled | quote }}
        - name: LOG_LEVEL
          value: {{ .Values.global.bigid.orchestrator.logLevel | quote }}
        - name: MIGRATE_TO_SCAN_PAGE_STATE
          value: {{ .Values.global.bigid.orchestrator.migrateToScanPageStateFF | quote }}
        - name: USE_SCAN_PAGE_STATE
          value: {{ .Values.global.bigid.useScanPageStateFF | quote }}
        - name: ENABLE_SCAN_TEMPLATE
          value: {{ .Values.global.bigid.enableScanTemplateFF | quote }}
        - name: CORRELATION_SETS_INFRASTRUCTURE_ENABLED
          value: {{ .Values.global.bigid.orchestrator.correlationSetsInfrastructureEnabled | quote }}
        - name: DISABLE_LEGACY_ACL_FF
          value: {{ .Values.global.bigid.disableLegacyAclFF | quote }}
        - name: ACTIONABLE_INSIGHTS_ENABLED
          value: {{ .Values.global.bigid.actionableInsights.enabled | quote }}
        - name: NEW_SCAN_INSIGHT_FOR_LABELING_ENABLED
          value: {{ .Values.global.bigid.newScanInsightForLabelingEnabled | quote }}
        - name: ENABLED_SCALABLE_DELETION
          value: {{ .Values.global.bigid.orchestrator.scalableDeletion.enabled | quote }}
        - name: SMB_V2_ACI_ENABLED
          value: {{ .Values.global.bigid.smbV2AciEnabled | quote }}
        - name: TERMINATION_GRACE_PERIOD_SECONDS
          value: {{ .Values.global.bigid.orchestrator.appTerminationGracePeriodSeconds | quote }}
        - name: NEW_CREDENTIALS_FLOW_ENABLED
          value: {{ .Values.global.bigid.orchestrator.newCredentialsFlow.enabled | quote }}
        - name: DYNAMIC_MODIFY_SCAN_WINDOW
          value: {{ .Values.global.bigid.dynamicModifyScanWindowFF.enabled | quote }}
        - name: GDRIVE_LABEL_IMPORTER_V2_ENABLED
          value: {{ .Values.global.bigid.orchestrator.gDriveLabelImporterV2 | quote }}
        - name: SCALABLE_PII_FINDINGS_DELETION_ENABLED
          value: {{ .Values.global.bigid.orchestrator.scalablePiiFindingsDeletion.enabled | quote }}
        - name: CLASSIFIER_SUPERSCAN_PREFILTERING_ENABLED
          value: {{ .Values.global.bigid.orchestrator.classifierSuperscanPrefiltering.enabled | quote }}
        - name: ENABLE_SSE_ON_ML
          value: {{ .Values.global.bigid.orchestrator.enableSseOnMlFF | quote }}
        - name: LABELING_IMPORT_MAX_IDLE_TIME_MINUTES
          value: {{ .Values.global.bigid.orchestrator.labelingImportMaxIdleTimeMinutes | quote }}
        - name: LABELING_PARTS_MAX_IDLE_TIME_MINUTES
          value: {{ .Values.global.bigid.orchestrator.labelingPartsMaxIdleTimeMinutes | quote }}
        - name: ENABLE_HANDLE_STUCK_LABELING_SCANS
          value: {{ .Values.global.bigid.orchestrator.enableHandleStuckLabelingScans | quote }}
        - name: CACHE_FINDINGS_FILTER_TTL_SEC
          value: {{ .Values.global.bigid.orchestrator.cacheFindingsFilterTTLSec | quote }}
        - name: ENABLE_RISK_DEFAULT_FIELDS_INIT
          value: {{ .Values.global.bigid.orchestrator.enableRiskDefaultFieldsInit | quote }}
        - name: DISABLE_WIDE_CLASSIFIERS
          value: {{ .Values.global.bigid.orchestrator.disableWideClassifiers | quote }}
        - name: DSAR_USE_CATALOG_COLUMNS_ENABLED_FF
          value: {{ .Values.global.bigid.dsarUseCatalogColumnsEnabled | quote }}
        - name: ACI_SUPPORT_FOR_FOLDERS_ENABLED
          value: {{ .Values.global.bigid.aciSupportForFoldersEnabled | quote }}
        - name: ACCESS_REMEDIATION_SMB_V2_ENABLED
          value: {{ .Values.global.bigid.orchestrator.accessRemediationSmbV2Enabled | quote }}
        - name: TPA_MULTIPLE_DEPLOYMENTS_ENABLED
          value: {{ .Values.global.bigid.orchestrator.tpaMultipleDeployment.enabled | quote }}
        - name: ENABLE_RELEASE_STUCK_PARTS_IN_CACHE
          value: {{ .Values.global.bigid.orchestrator.enableReleaseStuckPartsInCacheFF | quote }}
        - name: REDIS_QUEUED_SCAN_PARTS_MAX_IDLE_TIME_MINUTES
          value: {{ .Values.global.bigid.orchestrator.redisQueuedScanPartsMaxIdleTimeMinutesFF | quote }}
        - name: SCAN_WINDOW_SCHEDULER_ENABLED
          value: {{ .Values.global.bigid.orchestrator.scanWindowSchedulerEnabledFF | quote }}

      volumes:
      - name: logs
        emptyDir: {}
      - name: bigid-mongodb-ca
        secret:
          secretName: bigid-mongodb-ca
          defaultMode: 420
      - name: mongo-kerberos-orch-secrets
        secret:
          secretName: mongo-kerberos-secrets
          defaultMode: 420
      {{- with .Values.global.extraVolumes }}
        {{- toYaml . | nindent 6 }}
      {{- end }}
      imagePullSecrets:
      {{- range .Values.global.imagePullSecrets }}
        - name: {{ . }}
      {{- end }}
      terminationGracePeriodSeconds: {{ .Values.global.bigid.orchestrator.terminationGracePeriodSeconds }}
      {{- if .Values.global.bigid.podSecurityContext.enabled }}
      securityContext: {{- omit .Values.global.bigid.podSecurityContext "enabled" | toYaml | nindent 8 }}
      {{- end }}
      restartPolicy: Always
      {{- with .Values.global.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.global.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.global.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
