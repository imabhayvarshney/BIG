apiVersion: apps/v1
kind: Deployment
metadata:
  name: bigid-ui
  namespace: {{ .Release.Namespace | quote }}
  labels:
    app: bigid-ui
    {{- with .Values.global.additionalLabels }}
      {{- toYaml . | nindent 4 }}
    {{- end }}
    {{- include "ui.labels" . | nindent 4 }}
  annotations:
    checksum/configuration: {{ include (print $.Template.BasePath "/bigid-ui-configmap.yaml") . | sha256sum }}
    {{ include "global.skipCheckovAnnotations" . | nindent 2 }}
    {{- with .Values.global.commonAnnotations }}
      {{- toYaml . | nindent 4 }}
    {{- end }}
spec:
  replicas: {{ .Values.global.bigid.ui.replicaCount }}
  selector:
    matchLabels:
      app: bigid-ui
      {{- with .Values.global.podLabels }}
        {{- toYaml . | nindent 6 }}
      {{- end }}
  {{- if .Values.global.bigid.updateStrategy }}
  strategy: {{- toYaml .Values.updateStrategy | nindent 4 }}
  {{- end }}
  template:
    metadata:
      annotations:
      {{- with .Values.global.podAnnotations }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.global.bigid.ui.podAnnotations }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        app: bigid-ui
        {{- with .Values.global.podLabels }}
          {{- toYaml . | nindent 8 }}
        {{- end }}
      {{- if and (.Values.global.apm.enabled) (eq .Values.global.apm.type "datadog") }}
        tags.datadoghq.com/bigid-ui.env: {{ .Release.Namespace }}
        tags.datadoghq.com/bigid-ui.service: bigid-ui
        tags.datadoghq.com/service: "bigid-ui"
        tags.datadoghq.com/version: "{{ .Values.global.image.tag | trunc 63 }}"
      {{- end }}
    spec:
      serviceAccount: bigid-ui
      automountServiceAccountToken: false
      initContainers:
      {{- if and (eq (.Values.global.bigid.ui.service.port | int) 443) (not (and (.Values.global.bigid.ui.tls.certFile | default "") (.Values.global.bigid.ui.tls.keyFile | default ""))) }}
      - name: generate-self-signed-certs
        imagePullPolicy: {{ .Values.global.image.pullPolicy }}
        resources:
          {{- toYaml .Values.global.initContainers.resources | nindent 10 }}
        image: "{{ .Values.global.image.repository }}/{{ .Values.global.bigid.ui.image.repository }}{{ template "bigid.armRepository" . }}:{{ .Values.global.image.tag }}"
        command:
          - "/bin/bash"
        args:
          - "-cx"
          - |
            mkdir -p /usr/share/nginx/html/server
            openssl req -newkey rsa:2048 -nodes -keyout /usr/share/nginx/html/server/key.pem -x509 -days 365 -out /usr/share/nginx/html/server/cert.pem -subj '/C=US/ST=New York/L=New York/O=bigid.com/OU=IT Department/CN=bigid.com'
        volumeMounts:
        - name: cert-volume
          mountPath: /usr/share/nginx/html/server
      {{- end }}
      - name: init-config-service
        image: {{ template "initContainer.image" . }}
        imagePullPolicy: {{ .Values.global.image.pullPolicy }}
        command: ['sh', '-c', "until wget -q --spider http://bigid-config-service:{{ .Values.global.bigid.configService.port }}/actuator/health; do echo waiting for bigid-config-service; sleep 3; done"]
        resources:
          {{- toYaml .Values.global.initContainers.resources | nindent 10 }}
        {{- if .Values.global.initContainers.containerSecurityContext.enabled }}
        securityContext: {{- omit .Values.global.initContainers.containerSecurityContext "enabled" | toYaml | nindent 10 }}
        {{- end }}
      containers:
      - name: bigid-ui
        image: "{{ .Values.global.image.repository }}/{{.Values.global.bigid.ui.image.repository }}{{ template "bigid.armRepository" . }}:{{ .Values.global.image.tag }}"
        {{- if .Values.global.bigid.containerSecurityContext.enabled }}
        securityContext: {{- omit .Values.global.bigid.containerSecurityContext "enabled" | toYaml | nindent 10 }}
        {{- end }}
        imagePullPolicy: {{ .Values.global.image.pullPolicy }}
        ports:
        {{- if eq (.Values.global.bigid.ui.service.port | int ) 443 }}
        - containerPort: 8443
        {{- else }}
        - containerPort: 8080
        {{- end }}
        readinessProbe:
          httpGet:
            path: /
            {{- if eq (.Values.global.bigid.ui.service.port | int ) 443 }}
            port: 8443
            scheme: HTTPS
            {{- else }}
            port: 8080
            scheme: HTTP
            {{- end }}
          initialDelaySeconds: 15
          periodSeconds: 10
          timeoutSeconds: 5
        livenessProbe:
          httpGet:
            path: /
            {{- if eq (.Values.global.bigid.ui.service.port | int ) 443 }}
            port: 8443
            scheme: HTTPS
            {{- else }}
            port: 8080
            scheme: HTTP
            {{- end }}
          initialDelaySeconds: 15
          periodSeconds: 10
          timeoutSeconds: 5
        resources:
          {{- toYaml .Values.global.bigid.ui.resources | nindent 10 }}
        envFrom:
        - configMapRef:
            name: apm-configuration
        {{- if .Values.global.extraEnvVarsCM }}
        - configMapRef:
            name: {{ .Values.global.extraEnvVarsCM }}
        {{- end }}
        {{- if .Values.global.extraEnvVarsSecret }}
        - secretRef:
            name: {{ .Values.global.extraEnvVarsSecret }}
        {{- end }}
        env:
        {{- with .Values.global.extraEnvVars }}
          {{- toYaml . | nindent 8 }}
        {{- end }}
        {{- with .Values.global.bigid.ui.extraEnvVars }}
          {{- toYaml . | nindent 8 }}
        {{- end }}
        - name: USE_DISPLAY_NAME_FOR_POLICY_FF
          value: {{ .Values.global.bigid.useDisplayNameForPolicyFF | quote }}
        - name: CLUSTERING_ENABLED
          value: "{{ .Values.global.bigid.clustering.create }}"
        - name: ENABLE_NEW_UX_NAVIGATION
          value: {{ .Values.global.bigid.web.enableNewUxNavigation | quote }}
        - name: BIGIDME_AGENT_ENABLED
          value: {{ .Values.global.bigid.bigidme.create | quote }}
        - name: NEGATIVE_SUPPORT_TERM_FF
          value: {{ .Values.global.bigid.ui.negativeSupportTermFF | quote }}
        - name: CLASSIFY_FILE_NAMES_ENABLED
          value: {{ .Values.global.bigid.ui.classifyFileNamesEnabled | quote }}
        - name: DYNAMIC_MODIFY_PARSING_THREADS_FF
          value: {{ .Values.global.bigid.ui.dynamicModifyParsingThreadsFF | quote }}
        - name: DISABLE_LEGACY_ACL_FF
          value: {{ .Values.global.bigid.disableLegacyAclFF | quote }}
        - name: SENSITIVITY_CLASSIFICATION_V2_ENABLED
          value: {{ .Values.global.bigid.sensitivityClassificationV2Enabled | quote }}
        - name: ACI_DASHBOARD_UI_V2_ENABLED
          value: {{ .Values.global.bigid.aciDashboardUiV2Enabled | quote }}
        - name: SMB_V2_ACI_ENABLED
          value: {{ .Values.global.bigid.smbV2AciEnabled | quote }}
        - name: ACI_SUPPORT_FOR_FOLDERS_ENABLED
          value: {{ .Values.global.bigid.aciSupportForFoldersEnabled | quote }}
        {{- if and (.Values.global.apm.enabled) (eq .Values.global.apm.type "datadog") }}
        - name: DD_AGENT_HOST
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.hostIP
        - name: DD_ENV
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.labels['tags.datadoghq.com/bigid-ui.env']
        - name: DD_SERVICE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.labels['tags.datadoghq.com/bigid-ui.service']
        {{- end }}
      {{- if .Values.metrics.enabled }}
      - name: metrics
        image: "{{ .Values.metrics.image.registry }}/{{ .Values.metrics.image.repository }}:{{ .Values.metrics.image.tag }}"
        imagePullPolicy: {{ .Values.metrics.image.pullPolicy | quote }}
        command: ['/usr/bin/exporter', '-nginx.scrape-uri', 'http://127.0.0.1:{{- default .Values.global.bigid.ui.service.port .Values.metrics.port }}/status']
        ports:
        - name: metrics
          containerPort: 9117
        livenessProbe:
          httpGet:
            path: /metrics
            port: metrics
          initialDelaySeconds: 15
          timeoutSeconds: 5
        readinessProbe:
          httpGet:
            path: /metrics
            port: metrics
          initialDelaySeconds: 5
          timeoutSeconds: 1
        {{- if .Values.metrics.resources }}
        resources:
          {{- toYaml .Values.metrics.resources | nindent 10 }}
        {{- end }}
      {{- end }}
        volumeMounts:
          - name: cache-volume
            mountPath: /var/cache/nginx
          - name: run-volume
            mountPath: /var/run
          {{- if and (eq (.Values.global.bigid.ui.service.port | int) 443) (not (and (.Values.global.bigid.ui.tls.certFile | default "") (.Values.global.bigid.ui.tls.keyFile | default ""))) }}
          - name: cert-volume
            mountPath: /usr/share/nginx/html/server
          {{- end }}
          {{- if and .Values.global.bigid.ui.tls.certFile .Values.global.bigid.ui.tls.keyFile }}
          - name: bigid-ui-cert
            mountPath: /usr/share/nginx/html/server/cert.pem
            subPath: cert.pem
          - name: bigid-ui-key
            mountPath: /usr/share/nginx/html/server/key.pem
            subPath: key.pem
          {{- if .Values.global.bigid.ui.tls.dhParam }}
          - name: bigid-ui-dhparam
            mountPath: /usr/share/nginx/html/server/dhparam.pem
            subPath: dhparam.pem
          {{- end }}
          {{- end }}
          - mountPath: /opt/app-root/etc/nginx.d/nginx.conf
            name: nginx-config
            subPath: nginx.conf
          {{- with .Values.global.extraVolumeMounts }}
            {{- toYaml . | nindent 10 }}
          {{- end }}
      volumes:
        - name: cache-volume
          emptyDir: {}
        - name: run-volume
          emptyDir: {}
        - name: nginx-config
          configMap:
            name: ui-nginx-config
        {{- if and (eq (.Values.global.bigid.ui.service.port | int) 443) (not (and (.Values.global.bigid.ui.tls.certFile | default "") (.Values.global.bigid.ui.tls.keyFile | default ""))) }}
        - name: cert-volume
          emptyDir: {}
        {{- end }}
        {{- if and .Values.global.bigid.ui.tls.certFile .Values.global.bigid.ui.tls.keyFile }}
        - name: bigid-ui-cert
          secret:
            defaultMode: 420
            secretName: bigid-ui-certs
            items:
              - key: cert.pem
                path: cert.pem
        - name: bigid-ui-key
          secret:
            defaultMode: 420
            secretName: bigid-ui-certs
            items:
              - key: key.pem
                path: key.pem
        {{- if .Values.global.bigid.ui.tls.dhParam }}
        - name: bigid-ui-dhparam
          secret:
            defaultMode: 420
            secretName: bigid-ui-certs
            items:
              - key: dhparam.pem
                path: dhparam.pem
        {{- end }}
        {{- end }}
        {{- with .Values.global.extraVolumes }}
          {{- toYaml . | nindent 8 }}
        {{- end }}
      imagePullSecrets:
      {{- range .Values.global.imagePullSecrets }}
        - name: {{ . }}
      {{- end }}
      {{- if .Values.global.bigid.podSecurityContext.enabled }}
      securityContext: {{- omit .Values.global.bigid.podSecurityContext "enabled" | toYaml | nindent 8 }}
      {{- end }}
      restartPolicy: Always
      {{- with .Values.global.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.global.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.global.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
