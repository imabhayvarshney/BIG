apiVersion: v1
kind: ConfigMap
metadata:
  name: ui-nginx-config
  namespace: {{ .Release.Namespace | quote }}
  labels:
    app: bigid-ui
    {{- with .Values.global.additionalLabels }}
      {{- toYaml . | nindent 4 }}
    {{- end }}
data:
  nginx.conf: |-
      limit_req_zone $binary_remote_addr zone=loginlimit:10m rate=10r/s;
      error_log  /var/log/nginx/error.log warn;

      upstream stream_upstream {
        server bigid-web:3000;
      }

      server {
        # general configs
        client_max_body_size 50M;
        client_body_buffer_size 10M;
        keepalive_timeout    65;
        listen               8080;
        {{- if eq (.Values.global.bigid.ui.service.port | int ) 443 }}
        listen               8443 ssl http2;
        {{- end }}
        server_name          localhost;
        add_header X-Frame-Options "SAMEORIGIN";
        server_tokens off;
        proxy_hide_header X-Powered-By;
        proxy_hide_header Server;
        proxy_hide_header X-AspNetMvc-Version;
        proxy_hide_header X-AspNet-Version;

        {{- if eq (.Values.global.bigid.ui.service.port | int ) 443 }}
        # ssl configs
        ssl_certificate      /usr/share/nginx/html/server/cert.pem;
        ssl_certificate_key  /usr/share/nginx/html/server/key.pem;
        ssl_session_cache    shared:SSL:10m;
        ssl_session_timeout  10m;
        ssl_protocols TLSv1.2;
        {{- if .Values.global.bigid.ui.tls.dhParam }}
        ssl_dhparam /usr/share/nginx/html/server/dhparam.pem;
        {{- end }}
        ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
        ssl_prefer_server_ciphers on;
        {{- end }}

        # proxy to the nodejs application
        location /api {
          proxy_pass http://bigid-web:3000;
          proxy_http_version 1.1;
          proxy_set_header Upgrade $http_upgrade;
          proxy_set_header Connection 'upgrade';
          proxy_set_header Host $host;
          proxy_set_header X-Real-IP $remote_addr;
          proxy_pass_header on-behalf-authorization;
          proxy_cache_bypass 1;
          proxy_no_cache 1;
          sendfile off;
          add_header Last-Modified $date_gmt;
          add_header Cache-Control 'no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0';
          if_modified_since off;
          expires off;
          etag off;
          proxy_connect_timeout       60s;
          proxy_send_timeout          600s;
          proxy_read_timeout          600s;
          proxy_buffer_size          8k;
          proxy_buffers              4 16k;
          proxy_busy_buffers_size    16k;
        }

        location /proxy {
          proxy_pass http://bigid-web:3000;
          proxy_http_version 1.1;
          proxy_set_header Upgrade $http_upgrade;
          proxy_set_header Connection 'upgrade';
          proxy_set_header Host $host;
          proxy_set_header X-Real-IP $remote_addr;
          proxy_cache_bypass 1;
          proxy_no_cache 1;
          sendfile off;
          add_header Last-Modified $date_gmt;
          add_header Cache-Control 'no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0';
          add_header X-Frame-Options "SAMEORIGIN";
          if_modified_since off;
          expires off;
          etag off;
          # If the timeout is updated please update
          # the request connection timeout in the Scanner as well (HTTP_TIMEOUT_MS)
          proxy_connect_timeout       60s;
          proxy_send_timeout          600s;
          proxy_read_timeout          600s;
        }

          location ~ ^/proxy.*/stream/.* {
          proxy_pass http://stream_upstream;
          proxy_http_version 1.1;
          proxy_set_header Upgrade $http_upgrade;
          proxy_set_header Connection 'upgrade';
          proxy_set_header Host $host;
          proxy_set_header X-Real-IP $remote_addr;
          proxy_cache_bypass 1;
          proxy_no_cache 1;
          sendfile off;
          add_header Last-Modified $date_gmt;
          add_header Cache-Control 'no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0';
          add_header X-Frame-Options "SAMEORIGIN";
          if_modified_since off;
          expires off;
          etag off;
          # If the timeout is updated please update
          # the request connection timeout in the Scanner as well (HTTP_TIMEOUT_MS)
          proxy_connect_timeout       60s;
          proxy_send_timeout          600s;
          proxy_read_timeout          600s;
          proxy_buffering off;
          proxy_cache off;
        }

        location /api/v1/sessions {
          limit_req zone=loginlimit burst=20;
          proxy_pass http://bigid-web:3000;
          proxy_http_version 1.1;
          proxy_set_header Upgrade $http_upgrade;
          proxy_set_header Connection 'upgrade';
          proxy_set_header Host $host;
          proxy_set_header X-Real-IP $remote_addr;
          proxy_cache_bypass 1;
          proxy_no_cache 1;
          sendfile off;
          add_header Last-Modified $date_gmt;
          add_header Cache-Control 'no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0';
          if_modified_since off;
          expires off;
          etag off;
        }

        location /api/v1/saml {
          limit_req zone=loginlimit burst=20;
          proxy_pass http://bigid-web:3000;
          proxy_http_version 1.1;
          proxy_set_header Upgrade $http_upgrade;
          proxy_set_header Connection 'upgrade';
          proxy_set_header Host $host;
          proxy_set_header X-Real-IP $remote_addr;
          proxy_cache_bypass 1;
          proxy_no_cache 1;
          sendfile off;
          add_header Last-Modified $date_gmt;
          add_header Cache-Control 'no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0';
          if_modified_since off;
          expires off;
          etag off;
        }

        # expose status metrics (for New Relic monitoring BDT-25580)
        location /h@rdT0Guess$tatusP@th {
            if ($http_user_agent !~ Go-http-client) {
              return 404;
            }
            stub_status;
        }

        location / {
          root /opt/app-root/src;

          add_header X-Frame-Options "SAMEORIGIN";
          add_header Strict-Transport-Security "max-age=15552000; includeSubDomains";
          add_header X-Content-Type-Options "nosniff";
          add_header Referrer-Policy 'no-referrer';

          etag on;
          # defined in cache_expiration.conf file
          add_header Cache-Control $cache_control_by_content_type;
        }
      }
