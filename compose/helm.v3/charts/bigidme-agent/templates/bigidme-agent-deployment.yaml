apiVersion: apps/v1
kind: Deployment
metadata:
  name: bigid-me-agent
  namespace: {{ .Release.Namespace | quote }}
  labels:
    app: bigid-me-agent
    {{- with .Values.global.additionalLabels }}
      {{- toYaml . | nindent 4 }}
    {{- end }}
  annotations:
    {{ include "global.skipCheckovAnnotations" . | nindent 4 }}
    {{- with .Values.global.commonAnnotations }}
      {{- toYaml . | nindent 4 }}
    {{- end }}
spec:
  replicas: {{ .Values.global.bigid.bigidme.replicaCount }}
  selector:
    matchLabels:
      app: bigid-me-agent
      {{- with .Values.global.podLabels }}
        {{- toYaml . | nindent 6 }}
      {{- end }}
  {{- if .Values.global.bigid.bigidme.updateStrategy }}
  strategy: {{- toYaml .Values.global.bigid.bigidme.updateStrategy | nindent 4 }}
  {{- end }}
  template:
    metadata:
      {{- with .Values.global.podAnnotations }}
      annotations: {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        app: bigid-me-agent
        {{- with .Values.global.podLabels }}
          {{- toYaml . | nindent 8 }}
        {{- end }}
      {{- if and (.Values.global.apm.enabled) (eq .Values.global.apm.type "datadog") }}
        tags.datadoghq.com/bigid-meagent.env: {{ .Release.Namespace }}
        tags.datadoghq.com/bigid-meagent.service: bigid-meagent
        tags.datadoghq.com/service: "bigid-meagent"
        tags.datadoghq.com/version: "{{ .Values.global.image.tag | trunc 63 }}"
      {{- end }}
    spec:
      serviceAccount: bigid-me-agent
      automountServiceAccountToken: false
      initContainers:
      - name: init-config-service
        image: {{ template "initContainer.image" . }}
        imagePullPolicy: {{ .Values.global.image.pullPolicy }}
        command: ['sh', '-c', "until wget -q --spider http://bigid-config-service:{{ .Values.global.bigid.configService.port }}/actuator/health; do echo waiting for bigid-config-service; sleep 3; done"]
        resources:
          {{- toYaml .Values.global.initContainers.resources | nindent 10 }}
        {{- if .Values.global.initContainers.containerSecurityContext.enabled }}
        securityContext: {{- omit .Values.global.initContainers.containerSecurityContext "enabled" | toYaml | nindent 10 }}
        {{- end }}
      containers:
      - name: bigid-me-agent
        image: "{{ .Values.global.image.repository }}/bigid-me-agent:{{ include "bigidme-agent.imageTag" . }}"
        {{- if .Values.global.bigid.containerSecurityContext.enabled }}
        securityContext: {{- omit .Values.global.bigid.containerSecurityContext "enabled" | toYaml | nindent 10 }}
        {{- end }}
        imagePullPolicy: {{ .Values.global.image.pullPolicy }}
        ports:
        - containerPort: {{ .Values.global.bigid.bigidme.port }}
        volumeMounts:
        - name: mongo-ssl-config-service-truststore-secrets
          mountPath: /etc/ssl/bigid
          readOnly: true
        - name: mongo-kerberos-secrets
          mountPath: /etc/kerberos
          readOnly: true
        {{- with .Values.global.extraVolumeMounts }}
          {{- toYaml . | nindent 8 }}
        {{- end }}
        envFrom:
        - secretRef:
            name: mongodb-base-configuration
        - configMapRef:
            name: mongodb-node-configuration
        - configMapRef:
            name: global-configuration
        - configMapRef:
            name: apm-configuration
        {{- if .Values.global.extraEnvVarsCM }}
        - configMapRef:
            name: {{ .Values.global.extraEnvVarsCM }}
        {{- end }}
        {{- if .Values.global.extraEnvVarsSecret }}
        - secretRef:
            name: {{ .Values.global.extraEnvVarsSecret }}
        {{- end }}
        env:
        {{- with .Values.global.extraEnvVars }}
          {{- toYaml . | nindent 8 }}
        {{- end }}
        {{- with .Values.global.bigid.bigidme.extraEnvVars }}
          {{- toYaml . | nindent 8 }}
        {{- end }}
        {{- if and (.Values.global.apm.enabled) (eq .Values.global.apm.type "datadog") }}
        - name: DD_AGENT_HOST
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.hostIP
        - name: DD_ENV
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.labels['tags.datadoghq.com/bigid-bigidme.env']
        - name: DD_SERVICE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.labels['tags.datadoghq.com/bigid-bigid-me.service']
        {{- end }}
        - name: BIGID_REFRESH_TOKEN
          value: "{{ .Values.global.bigid.bigidme.refreshToken }}"
        - name: BIGID_AUTH_ENABLED
          value: "true"
        - name: BIGID_UI_HOST_EXT
          value: "bigid-ui"
        - name: BIGID_UI_PORT_EXT
          value: {{ .Values.global.bigid.ui.service.port | quote }}
        - name: BIGID_UI_PROTOCOL_EXT
          value: {{ include "bigid-ui-protocol" . | quote }}
        - name: BIGIDME_CLIENT_ID
          valueFrom:
            secretKeyRef:
              name: bigidme-agent-secret
              key: bigidme-client-id
        - name: BIGIDME_CLIENT_SECRET
          valueFrom:
            secretKeyRef:
              name: bigidme-agent-secret
              key: bigidme-client-secret
        - name: SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: {{ template "bigid.secretKey" . }}
              key: secretKey
        - name: BIGID_ME_AGENT_JAVA_OPTS
          value: {{ printf "$(JAVA_APM_OPTS) %s" (include "java.calcHeapSize" .Values.global.bigid.bigidme) | quote }}
        resources:
          {{- toYaml .Values.global.bigid.bigidme.resources | nindent 10 }}
      volumes:
      - name: mongo-ssl-config-service-truststore-secrets
        secret:
          secretName: mongo-ssl-truststore-secrets
          defaultMode: 420
      - name: mongo-kerberos-secrets
        secret:
          secretName: mongo-kerberos-secrets
          defaultMode: 420
      {{- with .Values.global.extraVolumes }}
        {{- toYaml . | nindent 6 }}
      {{- end }}
      imagePullSecrets:
      {{- range .Values.global.imagePullSecrets }}
        - name: {{ . }}
      {{- end }}
      {{- if .Values.global.bigid.podSecurityContext.enabled }}
      securityContext: {{- omit .Values.global.bigid.podSecurityContext "enabled" | toYaml | nindent 8 }}
      {{- end }}
      restartPolicy: Always
      {{- with .Values.global.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.global.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.global.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
