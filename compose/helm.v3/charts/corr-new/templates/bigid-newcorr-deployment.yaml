apiVersion: apps/v1
kind: Deployment
metadata:
  name: bigid-corr-new
  namespace: {{ .Release.Namespace | quote }}
  labels:
    app: bigid-corr-new
    {{- with .Values.global.additionalLabels }}
      {{- toYaml . | nindent 4 }}
    {{- end }}
    {{- include "corr-new.labels" . | nindent 4 }}
  annotations:
    {{ include "global.skipCheckovAnnotations" . | nindent 4 }}
    {{- with .Values.global.commonAnnotations }}
      {{- toYaml . | nindent 4 }}
    {{- end }}
spec:
  replicas: {{ .Values.global.bigid.correlator.replicaCount }}
  selector:
    matchLabels:
      app: bigid-corr-new
      {{- with .Values.global.podLabels }}
        {{- toYaml . | nindent 6 }}
      {{- end }}
  {{- if .Values.global.bigid.correlator.updateStrategy }}
  strategy: {{- toYaml .Values.global.bigid.correlator.updateStrategy | nindent 4 }}
  {{- end }}
  template:
    metadata:
      annotations:
      {{- with .Values.global.podAnnotations }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.global.bigid.correlator.podAnnotations }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        app: bigid-corr-new
        {{- with .Values.global.podLabels }}
          {{- toYaml . | nindent 8 }}
        {{- end }}
      {{- if and (.Values.global.apm.enabled) (eq .Values.global.apm.type "datadog") }}
        tags.datadoghq.com/bigid-corr-new.env: {{ .Release.Namespace }}
        tags.datadoghq.com/bigid-corr-new.service: bigid-corr-new
        tags.datadoghq.com/service: "bigid-corr-new"
        tags.datadoghq.com/version: "{{ .Values.global.image.tag | trunc 63 }}"
      {{- end }}
    spec:
      affinity:
      {{- if .Values.global.corrAffinity }}
        {{ tpl .Values.global.corrAffinity . | nindent 8 | trim }}
      {{- else }}
        {{- toYaml .Values.global.affinity | nindent 8 }}
      {{- end }}
      {{- with .Values.global.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if .Values.global.bigid.correlator.serviceAccount.create }}
      serviceAccountName: bigid-corr-new
      automountServiceAccountToken: false
      {{- end }}
      initContainers:
      - name: init-config-service
        image: {{ template "initContainer.image" . }}
        imagePullPolicy: {{ .Values.global.image.pullPolicy }}
        command: ['sh', '-c', "until wget -q --spider http://bigid-config-service:{{ .Values.global.bigid.configService.port }}/actuator/health; do echo waiting for bigid-config-service; sleep 3; done"]
        resources:
          {{- toYaml .Values.global.initContainers.resources | nindent 10 }}
        {{- if .Values.global.initContainers.containerSecurityContext.enabled }}
        securityContext: {{- omit .Values.global.initContainers.containerSecurityContext "enabled" | toYaml | nindent 10 }}
        {{- end }}
      - name: init-web
        image: {{ template "initContainer.image" . }}
        imagePullPolicy: {{ .Values.global.image.pullPolicy }}
        command: ['sh', '-c', "until wget -q --spider http://bigid-web:3000/health/readiness; do echo waiting for bigid-web; sleep 3; done"]
        resources:
          {{- toYaml .Values.global.initContainers.resources | nindent 10 }}
        {{- if .Values.global.initContainers.containerSecurityContext.enabled }}
        securityContext: {{- omit .Values.global.initContainers.containerSecurityContext "enabled" | toYaml | nindent 10 }}
        {{- end }}
      {{- if .Values.global.bigid.tenantService.create }}
      - name: init-tenant-service
        image: {{ template "initContainer.image" . }}
        imagePullPolicy: {{ .Values.global.image.pullPolicy }}
        command: [ 'sh', '-c', "until wget -q --spider http://bigid-tenant-service:{{ .Values.global.bigid.tenantService.port }}/api/v1/tenant-service/health; do echo waiting for bigid-tenant-service; sleep 3; done" ]
        resources:
          {{- toYaml .Values.global.initContainers.resources | nindent 10 }}
        {{- if .Values.global.initContainers.containerSecurityContext.enabled }}
        securityContext: {{- omit .Values.global.initContainers.containerSecurityContext "enabled" | toYaml | nindent 10 }}
        {{- end }}
      {{- end }}
      containers:
      - name: bigid-corr-new
        image: "{{ .Values.global.image.repository }}/{{ .Values.global.bigid.correlator.image.repository }}{{ template "bigid.armRepository" . }}:{{ .Values.global.image.tag }}"
        {{- if .Values.global.bigid.containerSecurityContext.enabled }}
        securityContext: {{- omit .Values.global.bigid.containerSecurityContext "enabled" | toYaml | nindent 10 }}
        {{- end }}
        imagePullPolicy: {{ .Values.global.image.pullPolicy }}
        readinessProbe:
         httpGet:
           path: /actuator/health/readiness
           port: {{ .Values.global.bigid.correlator.port }}
         initialDelaySeconds: 60
         periodSeconds: 10
        livenessProbe:
         httpGet:
           path: /actuator/health/liveness
           port: {{ .Values.global.bigid.correlator.port }}
         initialDelaySeconds: 60
         periodSeconds: 10
        ports:
         - containerPort: {{ .Values.global.bigid.correlator.port }}
        envFrom:
        - secretRef:
            name: mongodb-base-configuration
        - configMapRef:
            name: mongodb-java-configuration
        - configMapRef:
            name: global-configuration
        - configMapRef:
            name: apm-configuration
        {{- if .Values.global.extraEnvVarsCM }}
        - configMapRef:
            name: {{ .Values.global.extraEnvVarsCM }}
        {{- end }}
        {{- if .Values.global.extraEnvVarsSecret }}
        - secretRef:
            name: {{ .Values.global.extraEnvVarsSecret }}
        {{- end }}
        env:
        {{- with .Values.global.extraEnvVars }}
          {{- toYaml . | nindent 8 }}
        {{- end }}
        {{- with .Values.global.bigid.correlator.extraEnvVars }}
          {{- toYaml . | nindent 8 }}
        {{- end }}
        - name: IS_FIPS_MODE
          value: {{ .Values.global.fips.enabled | quote }}
        {{- if .Values.global.bigid.correlator.ignite.enabled }}
        - name: BIGID_CORR_CLIENT_MODE
          value: "true"
        - name: BIGID_CORR_CACHE_MODE
          value: {{ .Values.global.bigid.correlator.ignite.cacheMode | quote }}
        - name: BIGID_CORR_BACKUPS
          value: {{ .Values.global.bigid.correlator.ignite.backups | quote }}
        - name: DISABLE_SERVICES_LOGS
          value: {{ .Values.global.bigid.shouldDisableLogs | quote }}
        - name: K8S_IGNITE_CLUSTER
          value: "true"
        - name: K8S_IGNITE_NAMESPACE
          value: {{ .Values.global.bigid.correlator.ignite.namespace | quote }}
        - name: K8S_IGNITE_SERVICE
          value: {{ .Values.global.bigid.correlator.ignite.clusterName | quote }}
        - name: GENERATE_IDENTITIES_ON_START_UP
          value: "false"
        {{- end }}
        - name: RABBITMQ_CONSUMERS_SHUTDOWN_TIMEOUT_MSEC
          value: {{ .Values.global.bigid.correlator.rabbitmqConsumersShutdownTimeoutMsec | quote }}
        - name: CORRELATION_CONSUMER_THREAD_NUMBER
          value: {{ .Values.global.bigid.correlator.consumerThreadNumber | quote }}
        - name: CORRELATION_MAX_CONNECTIONS_PER_ROUTE
          value: {{ .Values.global.bigid.correlator.maxConnectionsPerRoute | quote }}
        - name: CORRELATION_MAX_TOTAL_CONNECTIONS
          value: {{ .Values.global.bigid.correlator.maxTotalConnections | quote }}
        - name: SHOULD_DROP_REDELIVERED_MESSAGES
          value: {{ .Values.global.bigid.correlator.shouldDropRedeliveredMessages | quote }}
        - name: NEW_CORR_JVM_OPTS
          value: {{ printf "$(JAVA_APM_OPTS) %s" (include "java.calcHeapSize" .Values.global.bigid.correlator) | quote }}
        - name: BIGID_CORR_CACHE_SIZE
          value: {{ .Values.global.bigid.correlator.cacheSize | quote }}
        - name: BIGID_UI_HOST_EXT
          value: "bigid-web"
        - name: BIGID_UI_PORT
          value: {{ .Values.global.bigid.web.port | quote }}
        - name: BIGID_UI_PROTOCOL_EXT
          value: "http"
        - name: BIGID_ORCH_PROTOCOL
          value: "http"
        - name: BIGID_ORCH_HOST
          value: "bigid-orch"
        - name: BIGID_ORCH_PORT
          value: {{ .Values.global.bigid.orchestrator.port | quote }}
        - name: MULTI_TENANT_MODE_ENABLED
          value: {{ .Values.global.bigid.multiTenantMode.enabled | quote }}
        - name: MULTI_TENANT_CONFIG_ENABLED
          value: {{ .Values.global.bigid.configService.multiTenantConfigEnabled | quote }}
        - name: SHOULD_GENERATE_AND_STORE_MONGO_CREDS_FF
          value: {{ .Values.global.bigid.multiTenantMode.generateAndUseMongoCreds | quote }}
        - name: NUMBERS_LENGTH_THRESHOLD
          value: {{ .Values.global.bigid.correlator.numbersLengthThreshold | quote }}
        {{- if and (.Values.global.apm.enabled) (eq .Values.global.apm.type "datadog") }}
        - name: DD_AGENT_HOST
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.hostIP
        - name: DD_ENV
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.labels['tags.datadoghq.com/bigid-corr-new.env']
        - name: DD_SERVICE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.labels['tags.datadoghq.com/bigid-corr-new.service']
        {{- end }}
        - name: CORRELATOR_HOST_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: BIGID_MQ_USER
          valueFrom:
            secretKeyRef:
              name: bigid-auth-secret
              key: rabbitmq-user
        - name: BIGID_MQ_PWD
          valueFrom:
            secretKeyRef:
              name: bigid-auth-secret
              key: rabbitmq-pass
        - name: BIGID_CACHE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: bigid-auth-secret
              key: redis-pass
        resources:
          {{- toYaml .Values.global.bigid.correlator.resources | nindent 10 }}
        volumeMounts:
        {{- if .Values.global.fips.enabled }}
        - name: mq-tls
          mountPath: /tmp/rabbitcerts
        {{- end }}
        - name: mongo-ssl-truststore-secrets
          mountPath: /etc/ssl/bigid
          readOnly: true
        - name: mongo-kerberos-corr-secrets
          mountPath: /etc/kerberos
          readOnly: true
        - name: mongo-kerberos-corr-gss
          mountPath: /etc/gss
          readOnly: true
        {{- with .Values.global.extraVolumeMounts }}
          {{- toYaml . | nindent 8 }}
        {{- end }}
      volumes:
      {{- if .Values.global.fips.enabled }}
      - name: mq-tls
        secret:
          secretName: bigid-mq-secrets
          defaultMode: 420
          items:
            - key: client.cert
              path: client.cert
      {{- end }}
      - name: mongo-ssl-truststore-secrets
        secret:
          secretName: mongo-ssl-truststore-secrets
          defaultMode: 420
      - name: mongo-kerberos-corr-secrets
        secret:
          secretName: mongo-kerberos-secrets
          defaultMode: 420
      - name: mongo-kerberos-corr-gss
        secret:
          secretName: mongo-kerberos-gss
          defaultMode: 420
      {{- with .Values.global.extraVolumes }}
        {{- toYaml . | nindent 6 }}
      {{- end }}
      imagePullSecrets:
      {{- range .Values.global.imagePullSecrets }}
        - name: {{ . }}
      {{- end }}
      {{- if .Values.global.bigid.podSecurityContext.enabled }}
      securityContext: {{- omit .Values.global.bigid.podSecurityContext "enabled" | toYaml | nindent 8 }}
      {{- end }}
      restartPolicy: Always
      terminationGracePeriodSeconds: {{ .Values.global.bigid.correlator.terminationGracePeriodSeconds }}
      nodeSelector:
      {{- $corrAffinity := fromYaml .Values.global.corrAffinity }}
      {{- if  (and (not $corrAffinity.nodeAffinity) (not (hasKey .Values.global.affinity "nodeAffinity")))}}
      {{- if .Values.global.bigid.correlator.nodeSelector }}
        {{- toYaml .Values.global.bigid.correlator.nodeSelector | nindent 8 }}
      {{- else }}
        {{- toYaml .Values.global.nodeSelector | nindent 8 }}
      {{- end }}
      {{- end }}
