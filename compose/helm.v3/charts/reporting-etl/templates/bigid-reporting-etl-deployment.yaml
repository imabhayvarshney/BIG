{{- if .Values.global.bigid.reportingEtl.create -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: bigid-reporting-etl
  namespace: {{ .Release.Namespace | quote }}
  labels:
    app: bigid-reporting-etl
    {{- with .Values.global.additionalLabels }}
      {{- toYaml . | nindent 4 }}
    {{- end }}
    {{- include "reporting-etl.labels" . | nindent 4 }}
  annotations:
    {{ include "global.skipCheckovAnnotations" . | nindent 4 }}
    {{- with .Values.global.commonAnnotations }}
      {{- toYaml . | nindent 4 }}
    {{- end }}
spec:
  replicas: {{ .Values.global.bigid.reportingEtl.replicaCount }}
  selector:
    matchLabels:
      app: bigid-reporting-etl
      {{- with .Values.global.podLabels }}
        {{- toYaml . | nindent 6 }}
      {{- end }}
  {{- if .Values.global.bigid.reportingEtl.updateStrategy }}
  strategy: {{- toYaml .Values.global.bigid.reportingEtl.updateStrategy | nindent 4 }}
  {{- end }}
  template:
    metadata:
      {{- with .Values.global.podAnnotations }}
      annotations: {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        app: bigid-reporting-etl
        {{- with .Values.global.podLabels }}
          {{- toYaml . | nindent 8 }}
        {{- end }}
      {{- if and (.Values.global.apm.enabled) (eq .Values.global.apm.type "datadog") }}
        tags.datadoghq.com/bigid-reporting-etl.env: {{ .Release.Namespace }}
        tags.datadoghq.com/bigid-reporting-etl.service: bigid-reporting-etl
        tags.datadoghq.com/service: "bigid-reporting-etl"
        tags.datadoghq.com/version: "{{ .Values.global.image.tag | trunc 63 }}"
      {{- end }}
    spec:
      serviceAccount: bigid-reporting-etl
      automountServiceAccountToken: false
      initContainers:
      - name: init-config-service
        image: {{ template "initContainer.image" . }}
        imagePullPolicy: {{ .Values.global.image.pullPolicy }}
        command: ['sh', '-c', "until wget -q --spider http://bigid-config-service:{{ .Values.global.bigid.configService.port }}/actuator/health; do echo waiting for bigid-config-service; sleep 3; done"]
        resources:
          {{- toYaml .Values.global.initContainers.resources | nindent 10 }}
        {{- if .Values.global.initContainers.containerSecurityContext.enabled }}
        securityContext: {{- omit .Values.global.initContainers.containerSecurityContext "enabled" | toYaml | nindent 10 }}
        {{- end }}
      - name: init-redis
        image: {{ template "initContainer.image" . }}
        imagePullPolicy: {{ .Values.global.image.pullPolicy }}
        command: ['sh', '-c', "until nc -zv -w1 $(BIGID_REDIS_HOST) $(BIGID_REDIS_PORT); do echo waiting for bigid-cache; sleep 3; done"]
        envFrom:
        - configMapRef:
            name: global-configuration
        resources:
          {{- toYaml .Values.global.initContainers.resources | nindent 10 }}
        {{- if .Values.global.initContainers.containerSecurityContext.enabled }}
        securityContext: {{- omit .Values.global.initContainers.containerSecurityContext "enabled" | toYaml | nindent 10 }}
        {{- end }}
      {{- if .Values.global.bigid.tenantService.create }}
      - name: init-tenant-service
        image: {{ template "initContainer.image" . }}
        imagePullPolicy: {{ .Values.global.image.pullPolicy }}
        command: [ 'sh', '-c', "until wget -q --spider http://bigid-tenant-service:{{ .Values.global.bigid.tenantService.port }}/api/v1/tenant-service/health; do echo waiting for bigid-tenant-service; sleep 3; done" ]
        resources:
          {{- toYaml .Values.global.initContainers.resources | nindent 10 }}
        {{- if .Values.global.initContainers.containerSecurityContext.enabled }}
        securityContext: {{- omit .Values.global.initContainers.containerSecurityContext "enabled" | toYaml | nindent 10 }}
        {{- end }}
      {{- end }}
      containers:
      {{- with .Values.global.bigid.reportingEtl.sidecars }}
        {{- toYaml . | nindent 6 }}
      {{- end }}
      - name: bigid-reporting-etl
        image: "{{ .Values.global.image.repository }}/{{.Values.global.bigid.reportingEtl.image.repository }}{{ template "bigid.armRepository" . }}:{{ .Values.global.image.tag }}"
        {{- if .Values.global.bigid.containerSecurityContext.enabled }}
        securityContext: {{- omit .Values.global.bigid.containerSecurityContext "enabled" | toYaml | nindent 10 }}
        {{- end }}
        imagePullPolicy: {{ .Values.global.image.pullPolicy }}
        readinessProbe:
          httpGet:
            path: /api/v1/reporting-etl/health
            port: {{ .Values.global.bigid.reportingEtl.port }}
          initialDelaySeconds: 60
          periodSeconds: 10
        livenessProbe:
          httpGet:
            path: /api/v1/reporting-etl/health
            port: {{ .Values.global.bigid.reportingEtl.port }}
          initialDelaySeconds: 60
          periodSeconds: 10
        ports:
          - containerPort: {{ .Values.global.bigid.reportingEtl.port }}
        envFrom:
        - secretRef:
            name: mongodb-base-configuration
        - configMapRef:
            name: mongodb-node-configuration
        - configMapRef:
            name: global-configuration
        - configMapRef:
            name: apm-configuration
        {{- if .Values.global.extraEnvVarsCM }}
        - configMapRef:
            name: {{ .Values.global.extraEnvVarsCM }}
        {{- end }}
        {{- if .Values.global.extraEnvVarsSecret }}
        - secretRef:
            name: {{ .Values.global.extraEnvVarsSecret }}
        {{- end }}
        env:
        {{- if and (.Values.global.apm.enabled) (eq .Values.global.apm.type "datadog") }}
          - name: DD_AGENT_HOST
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.hostIP
          - name: DD_ENV
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.labels['tags.datadoghq.com/bigid-reporting-etl.env']
          - name: DD_SERVICE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.labels['tags.datadoghq.com/bigid-reporting-etl.service']
        {{- end }}
          - name: PREFETCH_COUNT
            value: {{ .Values.global.bigid.reportingEtl.prefetchCount | quote }}
          - name: IS_FIPS_MODE
            value: {{ .Values.global.fips.enabled | quote }}
          - name: SECRET_KEY
            valueFrom:
              secretKeyRef:
                name: {{ template "bigid.secretKey" . }}
                key: secretKey
          - name: SECRET_SALT
            valueFrom:
              secretKeyRef:
                name: secret-key
                key: secretSalt
          - name: REDIS_PASSWORD
            valueFrom:
              secretKeyRef:
                name: bigid-auth-secret
                key: redis-pass
          - name: ENABLE_REPORTING_ETL
            value: {{ .Values.global.bigid.reportingEtl.create | quote }}
          - name: MULTI_TENANT_MODE_ENABLED
            value: {{ .Values.global.bigid.multiTenantMode.enabled | quote }}
          - name: MULTI_TENANT_CONFIG_ENABLED
            value: {{ .Values.global.bigid.configService.multiTenantConfigEnabled | quote }}
          - name: SHOULD_GENERATE_AND_STORE_MONGO_CREDS_FF
            value: {{ .Values.global.bigid.multiTenantMode.generateAndUseMongoCreds | quote }}
          - name: USE_SAAS
            value: {{ .Values.global.bigid.useSaas.enabled | quote }}
          - name: NODE_OPTIONS
            value: {{ include "nodeJs.maxOldSpaceSize" .Values.global.bigid.reportingEtl | quote }}
          - name: REPORTING_ETL_LOOKER_CLIENT_SECRET
            valueFrom:
              secretKeyRef:
                name: bigid-reporting-etl-secret
                key: client-secret
          - name: REPORTING_ETL_LOOKER_CLIENT_ID
            valueFrom:
              secretKeyRef:
                name: bigid-reporting-etl-secret
                key: client-id
          - name: DIS_DEPLOYMENT_MODE
            value: {{ .Values.global.bigid.reportingEtl.disDeploymentMode | quote }}
          - name: DIS_FULL_REMOTE_INTEGRATION_CLOUD_LOOKER_PROD
            value: {{ .Values.global.bigid.reportingEtl.disLookerProdUrl | quote }}
          - name: DIS_FULL_REMOTE_INTEGRATION_CLOUD_LOOKER_DEV
            value: {{ .Values.global.bigid.reportingEtl.disLookerDevUrl | quote }}
          - name: DISABLE_SERVICES_LOGS
            value: {{ .Values.global.bigid.shouldDisableLogs | quote }}
          - name: SCALABLE_HEALTH_CHECK_ENABLED
            value: "{{ .Values.global.bigid.scalableHealthCheck.enabled }}"
          - name: LOG_LEVEL
            value: {{ .Values.global.bigid.reportingEtl.logLevel | quote }}
          - name: REPORTING_ETL_CLUSTER_MODE
            value: {{ .Values.global.bigid.reportingEtl.clusterMode.enabled | quote }}
          - name: REPORTING_ETL_CLUSTER_NODES_COUNT
            value: {{ .Values.global.bigid.reportingEtl.clusterMode.nodeCount | quote }}
          {{- if .Values.global.extraEnvVars }}
          {{- .Values.global.extraEnvVars | toYaml | nindent 10 }}
          {{- end }}
        resources:
          {{- toYaml .Values.global.bigid.reportingEtl.resources | nindent 10 }}
        volumeMounts:
          - name: bigid-mongodb-ca
            mountPath: /etc/ssl/bigid
            readOnly: true
          - name: mongo-kerberos-secrets
            mountPath: /etc/kerberos
            readOnly: true
          {{- with .Values.global.extraVolumeMounts }}
            {{- toYaml . | nindent 10 }}
          {{- end }}
          {{- with .Values.global.bigid.reportingEtl.extraVolumeMounts }}
            {{- toYaml . | nindent 10 }}
          {{- end }}
      volumes:
        - name: bigid-mongodb-ca
          secret:
            secretName: bigid-mongodb-ca
            defaultMode: 420
        - name: mongo-kerberos-secrets
          secret:
            secretName: mongo-kerberos-secrets
            defaultMode: 420
        {{- with .Values.global.extraVolumes }}
          {{- toYaml . | nindent 8 }}
        {{- end }}
        {{- with .Values.global.bigid.reportingEtl.extraVolumes }}
          {{- toYaml . | nindent 8 }}
        {{- end }}
      imagePullSecrets:
      {{- range .Values.global.imagePullSecrets }}
        - name: {{ . }}
      {{- end }}
      {{- if .Values.global.bigid.podSecurityContext.enabled }}
      securityContext: {{- omit .Values.global.bigid.podSecurityContext "enabled" | toYaml | nindent 8 }}
      {{- end }}
      restartPolicy: Always
      {{- with .Values.global.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.global.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.global.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}
